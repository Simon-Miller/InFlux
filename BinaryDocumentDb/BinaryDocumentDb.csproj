<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <AssemblyVersion>1.0.5</AssemblyVersion>
    <Version>$(AssemblyVersion)</Version>
    <PackageProjectUrl>https://github.com/Simon-Miller/InFlux</PackageProjectUrl>
    <Description>A low level blob database file, with a repository that acts as an index of available blobs.  
There has been a lot of thought around trying to avoid writing changes to the file on disk
because solid state drives have a finite lifecycle.  Therefore the underlying code seeks to
re-use empty space, and only mark areas as free-space by altering a single byte on disk.
Given this holds a file stream open, there can only be one instance of the repository,
which you can consider the single source of truth.  This repository raises events as file 
alterations complete, using the InFlux method of weak referenced events.</Description>
    <PackageReadmeFile>ReadMe.md</PackageReadmeFile>
    <PackageIcon>BinaryDocumentDbIcon.png</PackageIcon>
    <RepositoryUrl>https://github.com/Simon-Miller/InFlux</RepositoryUrl>
    <PackageTags>store db file binary document</PackageTags>
    <PackageReleaseNotes>Improved DI registration to assure not registered more than once.</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\InFlux\InFlux.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="BinaryDocumentDbIcon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="ReadMe.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
